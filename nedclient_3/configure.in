dnl Process this file with autoconf to produce a configure script.
define([AC_CACHE_LOAD], )dnl disable caching for debugging
define([AC_CACHE_SAVE], )dnl
#--------------------------------------------------------------------
# Written by Ph. Prugniel, 2001/11/29, for installation in Pleinpot V7.6
# The "configure" script for the the NED client "client.3" prepares the file
# Makefile containing the definitions for CFLAG and LIBRARIES suited for
# the particular system. Modified by Igor Chilingarian 2004/01/09.
#--------------------------------------------------------------------
# Verifiy that we are at the right place
AC_INIT(byname.c)

AC_MSG_RESULT([starting configuration for NED client version 3])
#

# By default the library and executable files will be build from the current
# directory
AC_PREFIX_DEFAULT(.)

#--------------------------------------------------------------------
# Check "uname" to determine system type
#--------------------------------------------------------------------
AC_PROGRAM_CHECK(uname_found, uname, yes, no)
if test $uname_found = "no" ; then
    system="unknown"
else
    system=`uname -s`-`uname -r`
fi
AC_MSG_RESULT([Operating system: $system])

if test "$CC"; then
  AC_MSG_RESULT([C Compiler forced to: $CC])
fi
if test "$CFLAGS"; then
  AC_MSG_RESULT([CFLAGS to: $CFLAGS])
else
  CFLAGS="-O3 -Wall"
fi

LIBS="$LIBS -lm"

#--------------------------------------------------------------------
# check the C compiler to set CFLAGS and CC
#--------------------------------------------------------------------
AC_PROG_CC
if test x"$CC" = x""; then
   AC_MSG_ERROR([pleinpot configuration failed : == Do not find a C compiler])
fi


echo "$ac_n" "setting CFLAGS compiler options... $ac_c" 1>&6
      case $system in
	IRIX*)
	    CFLAGS="$CFLAGS -DBSD"
            echo "$ac_t"" $CFLAGS" 1>&6
	    ;;
	OSF1*)
	    CFLAGS="$CFLAGS -DBSD"
            echo "$ac_t""$CFLAGS " 1>&6
	    ;;
	AIX-1*)
	    CFLAGS="$CFLAGS -DBSD  -D_BSD"
            echo "$ac_t"" $CFLAGS" 1>&6
	    ;;
	Linux*)
	    CFLAGS="$CFLAGS -DBSD -DLINUX"
            echo "$ac_t"" $CFLAGS" 1>&6
	    ;;
	SunOS-5*)
            echo "$ac_t"" $CFLAGS -D_NO_PROTO" 1>&6
	    ;;
	HP-UX-*)
	    CFLAGS="$CFLAGS -DBSD"
            echo "$ac_t"" $CFLAGS" 1>&6
	    ;;
	*)
	    CFLAGS="$CFLAGS -DBSD"
            echo "$ac_t"" $CFLAGS" 1>&6
	    ;;
      esac

#---- unix networking functions ------------------------------------------
#	Check for the existence of the -lsocket and -lnsl libraries.
#	The order here is important, so that they end up in the right
#	order in the command line generated by make.  Here are some
#	special considerations:
#	1. Use "connect" and "accept" to check for -lsocket, and
#	   "gethostbyname" to check for -lnsl.
#	2. Use each function name only once:  can't redo a check because
#	   autoconf caches the results of the last check and won't redo it.
#	3. Use -lnsl and -lsocket only if they supply procedures that
#	   aren't already present in the normal libraries.  This is because
#	   IRIX 5.2 has libraries, but they aren't needed and they're
#	   bogus:  they goof up name resolution if used.
#	4. On some SVR4 systems, can't use -lsocket without -lnsl too.
#	   To get around this problem, check for both libraries together
#	   if -lsocket doesn't work by itself.
#--------------------------------------------------------------------
_checkBoth=0
AC_CHECK_FUNC(connect, _checkSocket=0, c_checkSocket=1)
if test "$_checkSocket" = 1; then
    AC_CHECK_LIB(socket, main, LIBS="$LIBS -lsocket", _checkBoth=1)
fi
if test "$_checkBoth" = 1; then
    _oldLibs=$LIBS
    LIBS="$LIBS -lsocket -lnsl"
    AC_CHECK_FUNC(accept, cfitsio_checkNsl=0, [LIBS=$_oldLibs])
fi
AC_CHECK_FUNC(gethostbyname, , AC_CHECK_LIB(nsl, main, [LIBS="$LIBS -lnsl"]))

AC_MSG_RESULT([setting LIBS to.. $LIBS])

AC_SUBST(CC)
AC_SUBST(CFLAGS)
AC_SUBST(LIBS)

AC_PROG_RANLIB


#### Output ###########################################################

AC_OUTPUT(Makefile)
AC_MSG_RESULT([configuration successfully excecuted... you can now proceed to "make"])
rm config.status
rm config.log
